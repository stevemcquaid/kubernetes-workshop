Kubernetes From Code to Deployment

Steve McQuaid
steve@stevemcquaid.com
https://github.com/stevemcquaid

: I am Steve McQuaid. I am a senior software engineer specializing in infrastructure engineering, specifically Kubernetes. Last year my wife and I relocated from the San Francisco Bay Area up to Carmel. More recently, I am actually taking the time right now to find the right new opportunity. So if you enjoy todays workshop, tell your boss!

: And when I am not coding I enjoy whisky, running, golfing, and DJing. 

: Before we get super deep into technical stuff, let go around the room and say something about yourself... maybe what you do, where you're from, any hobbies you have, and the reason you chose this workshop or what you hope to get out of it.

* Morning Agenda
- 08:30   AM  (B)  Welcome/Intros
- 09:00   AM  (L)  K8S Overview
- 09:45   AM  (W)  Download Tools
- 10:00  AM  (B)  Morning Break
- 10:30  AM  (W)  Kubectl + Multiple Contexts
- 11:00  AM  (W)  Hello World
- 11:15  AM  (L)  Networking: Ingresses + Traffic Routing
- 12:00  PM  (B)  Lunch: Hall B

: Review the core concepts of Kubernetes
: Everyone will download tools we need + break
: Explore kubectl and usages
: Deploy a hello world app on our personal clusters I've setup for you
: Discuss networking in kubernetes

* Afternoon Agenda
- 01:00   PM  (W)  Networking: Deploy Ingress Controller + Ingress Resource
- 01:30   PM  (W)  Large Cluster: Joining Forces
- 02:00   PM  (B)  Break: Snacks and Sodas
- 03:00   PM  (W)  Commit to Deploy with K8s
- 03:30   PM  (W)  Monitoring: Prometheus + App Metrics
- 04:00   PM  (W)  Office Hours + Questions
- 04:30   PM  (B)  Wrap

: After lunch we will deploy networking resources
: Combine all of our clusters into a large single cluster to show failover
: After a break, we will explore a developer workflow using kubernetes
: Dig into how the CNCF 

* Kubernetes (K8S) Overview (9:00 - 9:45AM)

* Kubernetes (K8S) Overview
- What is K8S?
- Why do we need it?
- How does it work?







* Download Tools (9:45 - 10:00 AM)
* Download Tools
- kubectl
- bash/ssh client for windows

* URL
- https://github.com/stevemcquaid/kubernetes-workshop#links

* Overview of k8s
- Abstract
- kubectl
** control plane
  - kube-api
  - kube-scheduler
  - kube-controller-manager
  - kubelet
  - kube-proxy


* Setup kubectl
* install
* kubectl get namespaces
* kubectl create -f
* kubectl
* multiple contexts
* Hello World App Deployment
* Networking
* Overlay Network
* Pods
* Service
* Kube-Proxy
* Ingress
* Ingress Controller
* Load Balancing
* Legacy App Migration
* Monitoring
* kops/kubeadm
* Disaster Recovery Concerns
* Schools of Thought
* etcd
* Extensibility
* Monitor k8s API
* k8s plugin
* CRD
* Office Hours for Custom Apps
* Metrics/HPA












* Kubernetes Core Concepts.

- containers
- pods
- labels
- services
- Kuberbetes network model


* Containers

Unix processes not lightweight Virtual Machines

- application + dependencies = image
- Runtime environment (cgroups, namespaces, env vars)

.image images/container.png

* Containers

Building container images.

.code docker/large-dockerfile

Total size: 500MB

* Containers

Building container images.

- Build applications in a dedicated build container or CI
- Ship build artifacts, not build environments

Remix

.code docker/small-dockerfile

Total size: 4MB

* Kubernetes

Container management, scheduling, and service discovery.

- API driven application management
- Agents monitor endpoints for state changes (real-time)
- Controllers enforce desired state
- Labels identify resources (nodes, applications, services)

* Kubernetes

High level concepts

- node
- pod
- scheduler
- replication controller
- service

* Node

Runs containers and proxies service requests.

- docker
- kubelet
- proxy

.image images/kubernetes-nodes-2.png

* Pod

Represents a logical application.

- One or more containers
- Shared namespaces

.image images/pod.png

* Scheduler

Schedules pods to run on nodes.

- Global scheduler for long running jobs
- Best fit chosen based on pod requirements
- Pluggable

.image images/kubernetes-scheduler.png

* Replication Controller

Manages a replicated set of pods.

- Creates pods from a template
- Ensures desired number of pods are running
- Online resizing 

.image images/kubernetes-rc.png

* Replication Controller

Manages a replicated set of pods.

- Creates pods from a template
- Ensures desired number of pods are running
- Self-healing 

.image images/kubernetes-rc-reschedule.png

* Service

Service discovery for pods.

- Proxy runs on each node
- Virtual IP per service (avoid port collisions)
- Basic round-robin algorithm
- Dynamic backends based on label queries 

* Time to get Hands On
